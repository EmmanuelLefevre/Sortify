// Chargement de l'extension
document.addEventListener('DOMContentLoaded', () => {
  const enableNotifsButton = document.getElementById("enable-notifs");

  // Fonction pour mettre √† jour l'√©tat du bouton
  const updateButtonVisibility = (shouldShow) => {
    enableNotifsButton.style.display = shouldShow ? 'block' : 'none';
  };

  // V√©rifer si le navigateur prend en charge les notifications
  if (!("Notification" in window)) {
    alert("Ce navigateur ne prend pas en charge les notifications de bureau!");
  }

  // G√©rer les diff√©rents √©tats des permissions
  switch (Notification.permission) {
    case "granted":
      updateButtonVisibility(false);
      new Notification('Test', {
        body: 'üöÄüöÄüöÄ Notifications d√©j√† activ√©es! üöÄüöÄüöÄ'
      });
      break;

    // Si la permission n'est pas encore d√©termin√©e, demander √† l'utilisateur
    case "default":
      Notification.requestPermission().then((permission) => {
        updateButtonVisibility(permission === "denied");
        if (permission === "granted") {
          new Notification('Test', {
            body: 'üöÄüöÄüöÄ Notifications activ√©es! üöÄüöÄüöÄ'
          });
        }
        else {
          new Notification('Test', {
            body: 'ü§¨ü§¨ü§¨ Notifications refus√©es! ü§¨ü§¨ü§¨'
          });
        }
      }).catch((err) => {
        console.error("Erreur lors de la demande des permissions : ", err);
        new Notification('Test', {
          body: '‚ö†Ô∏è Erreur lors de la demande des permissions! ‚ö†Ô∏è'
        });
      });
      break;

    // Afficher le bouton si les notifications sont refus√©es
    case "denied":
      updateButtonVisibility(true);
      break;
  }
});


document.getElementById('sort-btn').addEventListener('click', () => {
  chrome.runtime.sendMessage({ action: "sortBookmarks" }, (response) => {
    if (response.success) {
      console.log("Favoris tri√©s avec succ√®s !");
    }
  });
});
